/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.4.1 public/models/Scene.glb 
*/

import React, { useLayoutEffect, useRef } from "react";
import { useGLTF, useScroll } from "@react-three/drei";
import { animated, useSpring } from "@react-spring/three";
import { useFrame } from "@react-three/fiber";
import gsap from "gsap";

export function Scene(props) {
  const ref = useRef();
  const refRot = useRef();
  const tl = useRef();
  tl.current = 0;
  const scroll = useScroll();

  useFrame(() => {
    tl.current.seek(scroll.offset * tl.current.duration());
  });
  useLayoutEffect(() => {
    tl.current = gsap.timeline();

    tl.current.to(ref.current.position, {
      duration: 0.25,
      x: 3,
      y: -1,
    });

    tl.current.to(refRot.current.rotation, {
      y: Math.PI / 6 + (-2 * Math.PI) / 3,
    });

    tl.current.to(refRot.current.rotation, {
      y: Math.PI / 6 + (-4 * Math.PI) / 3,
    });

    tl.current.to(ref.current.position, {
      delay: 0.2,
      y: 12,
    });
  }, []);

  const { carouselRotation } = useSpring({
    from: {
      carouselRotation: 0,
    },
    to: [
      {
        carouselRotation: (-2 * Math.PI) / 3,
        delay: 1000,
      },
      {
        carouselRotation: (-Math.PI * 4) / 3,
        delay: 1000,
      },
      {
        carouselRotation: (-6 * Math.PI) / 3,
        delay: 1000,
      },
    ],
    config: {
      mass: 5,
      tension: 400,
      friction: 50,
    },
    loop: true,
    immediate: true,
  });

  const { nodes, materials } = useGLTF("/models/Scene.glb");
  return (
    <group ref={ref} {...props} dispose={null} position={[15, 0, 0]}>
      <animated.group
        rotation-y={Math.PI / 6}
        rotation-x={Math.PI / 6}
        scale={[0.8, 1, 0.8]}
        ref={refRot}
      >
        <mesh
          geometry={nodes.Cylinder001.geometry}
          material={materials["Basketball.001"]}
        />
        <mesh
          geometry={nodes.Cylinder001_1.geometry}
          material={materials["Pink.001"]}
        />
        <mesh
          geometry={nodes.Cylinder001_2.geometry}
          material={materials["Gray.001"]}
        />
        <mesh
          geometry={nodes.Cylinder001_3.geometry}
          material={materials["Black.001"]}
        />
        <mesh
          geometry={nodes.Cylinder001_4.geometry}
          material={materials["OffWhite.001"]}
        />
        <mesh
          geometry={nodes.Cylinder001_5.geometry}
          material={materials["RedSmooth.001"]}
        />
        <mesh
          geometry={nodes.Cylinder001_6.geometry}
          material={materials["Tan.001"]}
        />
        <mesh
          geometry={nodes.Cylinder001_7.geometry}
          material={materials["Red.001"]}
        />
        <mesh
          geometry={nodes.Cylinder001_8.geometry}
          material={materials["BasketBallLines.001"]}
        />
        <mesh
          geometry={nodes.Cylinder001_9.geometry}
          material={materials.GreenDark}
        />
        <mesh
          geometry={nodes.Cylinder001_10.geometry}
          material={materials["BabyBlue.001"]}
        />
        <mesh
          geometry={nodes.Cylinder001_11.geometry}
          material={materials["Oil.001"]}
        />
        <mesh
          geometry={nodes.Cylinder001_12.geometry}
          material={materials["Yellow.001"]}
        />
        <mesh
          geometry={nodes.Cylinder001_13.geometry}
          material={materials["RedLigth.001"]}
        />
        <mesh
          geometry={nodes.Cylinder001_14.geometry}
          material={materials["Material.004"]}
        />
        <mesh
          geometry={nodes.Cylinder001_15.geometry}
          material={materials["Green.001"]}
        />
        <mesh
          geometry={nodes.Cylinder001_16.geometry}
          material={materials["Material.005"]}
        />
      </animated.group>
    </group>
  );
}

useGLTF.preload("/models/Scene.glb");
